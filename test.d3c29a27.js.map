{"version":3,"sources":["js/test.js"],"names":["horses","race","horse","Promise","resolve","reject"],"mappings":";AA8GA,MAAMA,EAAS,CACX,EACA,EACA,EACA,EACA,GAKJ,SAASC,EAAKC,GACH,OAAA,IAAIC,SAASC,QAASC","file":"test.d3c29a27.js","sourceRoot":"../src","sourcesContent":["// const fetchUserFromServer = (username, onSuccess, onError) => {\n//     console.log(`Fetching ${username}`);\n\n//     setTimeout(() => {\n//         const isSuccess = false;\n//         if (isSuccess) {\n//             onSuccess('Success value');\n//         } else {\n//             onError('Error value');\n//         }\n//     }, 2000)\n// }\n\n// const onFetchSuccess = value => {\n//     console.log(value);\n// }\n\n// const onFetchError = error => {\n//     console.log(error);\n// }\n\n// fetchUserFromServer(\"Mango\", onFetchSuccess, onFetchError);\n\n\n// const fetchUserFromServer = username => {\n//     return new Promise((resolve, reject) => {\n//         console.log(`Fetching ${username}`);\n//         const isSuccess = false;\n\n//         setTimeout(() => {\n//             if (isSuccess) {\n//                 resolve('Success value!');\n//             } else {\n//                 reject('Error value');\n//             }\n//         }, 2000)\n//     })\n// }\n\n// fetchUserFromServer('Ed')\n//     .then(value => console.log(value))\n//     .catch(error => console.log(error))\n\n\n// const makePromise = (text, delay) => {\n//     return new Promise(resolve => {\n//         setTimeout(() => resolve(text), delay);\n//     })\n// }\n\n// const promiseA = makePromise(\"promiseA value\", 1000);\n// const promiseB = makePromise(\"promiseB value\", 3000);\n\n// Promise.race([promiseA, promiseB])\n//     .then(text => console.log(text))\n//     .catch(error => console.log(error));\n\n\n// new Promise(resolve => resolve('value')).then(value => console.log(value));\n// Promise.resolve('value').then(value => console.log(value));\n\n// new Promise(reject => reject('error')).catch(error => console.log(error))\n// Promise.reject('error').catch(error => console.log(error))\n\n\n// const greeting = guestName => {\n//     if (guestName === '' || guestName === undefined) {\n//         return {\n//             success: false,\n//             message: \"Enter name\",\n//         };\n//     }\n//     return {\n//         success: true,\n//         message: `Welcome ${guestName}`\n//     };\n// };\n\n// const result = greeting('Mango');\n\n// if (result.success) {\n//     console.log(result.message)\n// } else {\n//     console.error(result.message);\n// }\n\n\n// const greeting = (name, onSuccess, onError) => {\n//     if (name === '' || name === undefined) {\n//         return onError(\"Enter name\")\n//     }\n//     return onSuccess(`Welcome ${name}`)\n// }\n\n// greeting('Mango', user => console.log(user), error => console.log(error));\n\n\n// const greeting = name => {\n//     if (name === '' || name === undefined) {\n//        return Promise.reject('Enter name');\n//     }\n//     return Promise.resolve(`Welcome ${name}`);\n// };\n\n// greeting('')\n//     .then(user => console.log(user))\n//     .catch(error => console.log(error))\n//     .finally('settled');\n\n\nconst horses = [\n    1,\n    2,\n    3,\n    4,\n    5,\n];\n\n\n\nfunction race(horse) {\n    return new Promise((resolve, reject)\n    \n)\n}\n"]}